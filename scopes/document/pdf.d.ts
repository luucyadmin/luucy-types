declare namespace document {
    /**
     * PDF Export 
     * 
     * Export UI elements to a PDF file
     * Some elements won't be rendered in the PDF such as buttons and form inputs.
     * 
     * @example // Export whole modal
     * const pdf = new document.PDF('Building Detail Report');
     * pdf.add(modal);
     * 
     * pdf.download();
     * 
     * @example // Export statistics
     * const pdf = new document.PDF('Statistics');
     * 
     * pdf.add(table, document.half);
     * pdf.add(infoParagraph, document.half);
     * pdf.add(barChart);
     * 
     * pdf.download();
     */
    class PDF {
        /** 
         * Creates a PDF exporter
         * 
         * @param title - The PDFs title. The title can't be changed afterwards.
         */
        constructor(title: string);

        readonly title: string;

        /**
         * Add a ui container to the PDF exporter
         * 
         * The container and their children will get grouped together.
         * Each child will occupy the whole width of the container.
         * To have more control over the order and width of each element add them one by one without the container.
         * @param container UI element containing children
         * @param width Defines how much width is occupied by the container in the PDF
         */
        add(container: ui.ElementContainer, width?: PDFElementWidth): void;

        /**
         * Adds a single ui element to the PDF exporter
         * @param element UI element
         * @param width Defines how much width is occupied by the element in the PDF
         */
        add(element: ui.Element, width?: PDFElementWidth): void;

        /**
         * Starts the print process in the browser.
         * 
         * Download the PDF generated by the previously added elements.
         */
        download(): void;
    }
}